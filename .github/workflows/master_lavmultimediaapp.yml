name: Build and deploy ASP.Net Core app to Azure Web App - lavmultimediaapp
# here it goes
# zhe shi wode yingyong
on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read  # Necessário para o checkout do código

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore LavMultimediaAPI.csproj

      - name: Build
        run: dotnet build LavMultimediaAPI.csproj --configuration Release

      - name: Publish
        run: dotnet publish LavMultimediaAPI.csproj -c Release -o ./publish

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ./publish

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write  # Requerido para OIDC
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_7D84959963804A64BC039FEE51E6C548 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_F412372E90F74529B54D9F308A12B2B5 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_4DE03CDE0DFB4C3C8B6A695489027714 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'lavmultimediaapp'
          slot-name: 'Production'
          package: .
